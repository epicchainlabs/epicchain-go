// Code generated by "stringer -type=Opcode -linecomment"; DO NOT EDIT.

package opcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PUSHINT8-0]
	_ = x[PUSHINT16-1]
	_ = x[PUSHINT32-2]
	_ = x[PUSHINT64-3]
	_ = x[PUSHINT128-4]
	_ = x[PUSHINT256-5]
	_ = x[PUSHT-8]
	_ = x[PUSHF-9]
	_ = x[PUSHA-10]
	_ = x[PUSHNULL-11]
	_ = x[PUSHDATA1-12]
	_ = x[PUSHDATA2-13]
	_ = x[PUSHDATA4-14]
	_ = x[PUSHM1-15]
	_ = x[PUSH0-16]
	_ = x[PUSH1-17]
	_ = x[PUSH2-18]
	_ = x[PUSH3-19]
	_ = x[PUSH4-20]
	_ = x[PUSH5-21]
	_ = x[PUSH6-22]
	_ = x[PUSH7-23]
	_ = x[PUSH8-24]
	_ = x[PUSH9-25]
	_ = x[PUSH10-26]
	_ = x[PUSH11-27]
	_ = x[PUSH12-28]
	_ = x[PUSH13-29]
	_ = x[PUSH14-30]
	_ = x[PUSH15-31]
	_ = x[PUSH16-32]
	_ = x[NOP-33]
	_ = x[JMP-34]
	_ = x[JMPL-35]
	_ = x[JMPIF-36]
	_ = x[JMPIFL-37]
	_ = x[JMPIFNOT-38]
	_ = x[JMPIFNOTL-39]
	_ = x[JMPEQ-40]
	_ = x[JMPEQL-41]
	_ = x[JMPNE-42]
	_ = x[JMPNEL-43]
	_ = x[JMPGT-44]
	_ = x[JMPGTL-45]
	_ = x[JMPGE-46]
	_ = x[JMPGEL-47]
	_ = x[JMPLT-48]
	_ = x[JMPLTL-49]
	_ = x[JMPLE-50]
	_ = x[JMPLEL-51]
	_ = x[CALL-52]
	_ = x[CALLL-53]
	_ = x[CALLA-54]
	_ = x[CALLT-55]
	_ = x[ABORT-56]
	_ = x[ASSERT-57]
	_ = x[THROW-58]
	_ = x[TRY-59]
	_ = x[TRYL-60]
	_ = x[ENDTRY-61]
	_ = x[ENDTRYL-62]
	_ = x[ENDFINALLY-63]
	_ = x[RET-64]
	_ = x[SYSCALL-65]
	_ = x[DEPTH-67]
	_ = x[DROP-69]
	_ = x[NIP-70]
	_ = x[XDROP-72]
	_ = x[CLEAR-73]
	_ = x[DUP-74]
	_ = x[OVER-75]
	_ = x[PICK-77]
	_ = x[TUCK-78]
	_ = x[SWAP-80]
	_ = x[ROT-81]
	_ = x[ROLL-82]
	_ = x[REVERSE3-83]
	_ = x[REVERSE4-84]
	_ = x[REVERSEN-85]
	_ = x[INITSSLOT-86]
	_ = x[INITSLOT-87]
	_ = x[LDSFLD0-88]
	_ = x[LDSFLD1-89]
	_ = x[LDSFLD2-90]
	_ = x[LDSFLD3-91]
	_ = x[LDSFLD4-92]
	_ = x[LDSFLD5-93]
	_ = x[LDSFLD6-94]
	_ = x[LDSFLD-95]
	_ = x[STSFLD0-96]
	_ = x[STSFLD1-97]
	_ = x[STSFLD2-98]
	_ = x[STSFLD3-99]
	_ = x[STSFLD4-100]
	_ = x[STSFLD5-101]
	_ = x[STSFLD6-102]
	_ = x[STSFLD-103]
	_ = x[LDLOC0-104]
	_ = x[LDLOC1-105]
	_ = x[LDLOC2-106]
	_ = x[LDLOC3-107]
	_ = x[LDLOC4-108]
	_ = x[LDLOC5-109]
	_ = x[LDLOC6-110]
	_ = x[LDLOC-111]
	_ = x[STLOC0-112]
	_ = x[STLOC1-113]
	_ = x[STLOC2-114]
	_ = x[STLOC3-115]
	_ = x[STLOC4-116]
	_ = x[STLOC5-117]
	_ = x[STLOC6-118]
	_ = x[STLOC-119]
	_ = x[LDARG0-120]
	_ = x[LDARG1-121]
	_ = x[LDARG2-122]
	_ = x[LDARG3-123]
	_ = x[LDARG4-124]
	_ = x[LDARG5-125]
	_ = x[LDARG6-126]
	_ = x[LDARG-127]
	_ = x[STARG0-128]
	_ = x[STARG1-129]
	_ = x[STARG2-130]
	_ = x[STARG3-131]
	_ = x[STARG4-132]
	_ = x[STARG5-133]
	_ = x[STARG6-134]
	_ = x[STARG-135]
	_ = x[NEWBUFFER-136]
	_ = x[MEMCPY-137]
	_ = x[CAT-139]
	_ = x[SUBSTR-140]
	_ = x[LEFT-141]
	_ = x[RIGHT-142]
	_ = x[INVERT-144]
	_ = x[AND-145]
	_ = x[OR-146]
	_ = x[XOR-147]
	_ = x[EQUAL-151]
	_ = x[NOTEQUAL-152]
	_ = x[SIGN-153]
	_ = x[ABS-154]
	_ = x[NEGATE-155]
	_ = x[INC-156]
	_ = x[DEC-157]
	_ = x[ADD-158]
	_ = x[SUB-159]
	_ = x[MUL-160]
	_ = x[DIV-161]
	_ = x[MOD-162]
	_ = x[POW-163]
	_ = x[SQRT-164]
	_ = x[MODMUL-165]
	_ = x[MODPOW-166]
	_ = x[SHL-168]
	_ = x[SHR-169]
	_ = x[NOT-170]
	_ = x[BOOLAND-171]
	_ = x[BOOLOR-172]
	_ = x[NZ-177]
	_ = x[NUMEQUAL-179]
	_ = x[NUMNOTEQUAL-180]
	_ = x[LT-181]
	_ = x[LE-182]
	_ = x[GT-183]
	_ = x[GE-184]
	_ = x[MIN-185]
	_ = x[MAX-186]
	_ = x[WITHIN-187]
	_ = x[PACKMAP-190]
	_ = x[PACKSTRUCT-191]
	_ = x[PACK-192]
	_ = x[UNPACK-193]
	_ = x[NEWARRAY0-194]
	_ = x[NEWARRAY-195]
	_ = x[NEWARRAYT-196]
	_ = x[NEWSTRUCT0-197]
	_ = x[NEWSTRUCT-198]
	_ = x[NEWMAP-200]
	_ = x[SIZE-202]
	_ = x[HASKEY-203]
	_ = x[KEYS-204]
	_ = x[VALUES-205]
	_ = x[PICKITEM-206]
	_ = x[APPEND-207]
	_ = x[SETITEM-208]
	_ = x[REVERSEITEMS-209]
	_ = x[REMOVE-210]
	_ = x[CLEARITEMS-211]
	_ = x[POPITEM-212]
	_ = x[ISNULL-216]
	_ = x[ISTYPE-217]
	_ = x[CONVERT-219]
	_ = x[ABORTMSG-224]
	_ = x[ASSERTMSG-225]
}

const _Opcode_name = "PUSHINT8PUSHINT16PUSHINT32PUSHINT64PUSHINT128PUSHINT256PUSHTPUSHFPUSHAPUSHNULLPUSHDATA1PUSHDATA2PUSHDATA4PUSHM1PUSH0PUSH1PUSH2PUSH3PUSH4PUSH5PUSH6PUSH7PUSH8PUSH9PUSH10PUSH11PUSH12PUSH13PUSH14PUSH15PUSH16NOPJMPJMP_LJMPIFJMPIF_LJMPIFNOTJMPIFNOT_LJMPEQJMPEQ_LJMPNEJMPNE_LJMPGTJMPGT_LJMPGEJMPGE_LJMPLTJMPLT_LJMPLEJMPLE_LCALLCALL_LCALLACALLTABORTASSERTTHROWTRYTRY_LENDTRYENDTRY_LENDFINALLYRETSYSCALLDEPTHDROPNIPXDROPCLEARDUPOVERPICKTUCKSWAPROTROLLREVERSE3REVERSE4REVERSENINITSSLOTINITSLOTLDSFLD0LDSFLD1LDSFLD2LDSFLD3LDSFLD4LDSFLD5LDSFLD6LDSFLDSTSFLD0STSFLD1STSFLD2STSFLD3STSFLD4STSFLD5STSFLD6STSFLDLDLOC0LDLOC1LDLOC2LDLOC3LDLOC4LDLOC5LDLOC6LDLOCSTLOC0STLOC1STLOC2STLOC3STLOC4STLOC5STLOC6STLOCLDARG0LDARG1LDARG2LDARG3LDARG4LDARG5LDARG6LDARGSTARG0STARG1STARG2STARG3STARG4STARG5STARG6STARGNEWBUFFERMEMCPYCATSUBSTRLEFTRIGHTINVERTANDORXOREQUALNOTEQUALSIGNABSNEGATEINCDECADDSUBMULDIVMODPOWSQRTMODMULMODPOWSHLSHRNOTBOOLANDBOOLORNZNUMEQUALNUMNOTEQUALLTLEGTGEMINMAXWITHINPACKMAPPACKSTRUCTPACKUNPACKNEWARRAY0NEWARRAYNEWARRAY_TNEWSTRUCT0NEWSTRUCTNEWMAPSIZEHASKEYKEYSVALUESPICKITEMAPPENDSETITEMREVERSEITEMSREMOVECLEARITEMSPOPITEMISNULLISTYPECONVERTABORTMSGASSERTMSG"

var _Opcode_map = map[Opcode]string{
	0:   _Opcode_name[0:8],
	1:   _Opcode_name[8:17],
	2:   _Opcode_name[17:26],
	3:   _Opcode_name[26:35],
	4:   _Opcode_name[35:45],
	5:   _Opcode_name[45:55],
	8:   _Opcode_name[55:60],
	9:   _Opcode_name[60:65],
	10:  _Opcode_name[65:70],
	11:  _Opcode_name[70:78],
	12:  _Opcode_name[78:87],
	13:  _Opcode_name[87:96],
	14:  _Opcode_name[96:105],
	15:  _Opcode_name[105:111],
	16:  _Opcode_name[111:116],
	17:  _Opcode_name[116:121],
	18:  _Opcode_name[121:126],
	19:  _Opcode_name[126:131],
	20:  _Opcode_name[131:136],
	21:  _Opcode_name[136:141],
	22:  _Opcode_name[141:146],
	23:  _Opcode_name[146:151],
	24:  _Opcode_name[151:156],
	25:  _Opcode_name[156:161],
	26:  _Opcode_name[161:167],
	27:  _Opcode_name[167:173],
	28:  _Opcode_name[173:179],
	29:  _Opcode_name[179:185],
	30:  _Opcode_name[185:191],
	31:  _Opcode_name[191:197],
	32:  _Opcode_name[197:203],
	33:  _Opcode_name[203:206],
	34:  _Opcode_name[206:209],
	35:  _Opcode_name[209:214],
	36:  _Opcode_name[214:219],
	37:  _Opcode_name[219:226],
	38:  _Opcode_name[226:234],
	39:  _Opcode_name[234:244],
	40:  _Opcode_name[244:249],
	41:  _Opcode_name[249:256],
	42:  _Opcode_name[256:261],
	43:  _Opcode_name[261:268],
	44:  _Opcode_name[268:273],
	45:  _Opcode_name[273:280],
	46:  _Opcode_name[280:285],
	47:  _Opcode_name[285:292],
	48:  _Opcode_name[292:297],
	49:  _Opcode_name[297:304],
	50:  _Opcode_name[304:309],
	51:  _Opcode_name[309:316],
	52:  _Opcode_name[316:320],
	53:  _Opcode_name[320:326],
	54:  _Opcode_name[326:331],
	55:  _Opcode_name[331:336],
	56:  _Opcode_name[336:341],
	57:  _Opcode_name[341:347],
	58:  _Opcode_name[347:352],
	59:  _Opcode_name[352:355],
	60:  _Opcode_name[355:360],
	61:  _Opcode_name[360:366],
	62:  _Opcode_name[366:374],
	63:  _Opcode_name[374:384],
	64:  _Opcode_name[384:387],
	65:  _Opcode_name[387:394],
	67:  _Opcode_name[394:399],
	69:  _Opcode_name[399:403],
	70:  _Opcode_name[403:406],
	72:  _Opcode_name[406:411],
	73:  _Opcode_name[411:416],
	74:  _Opcode_name[416:419],
	75:  _Opcode_name[419:423],
	77:  _Opcode_name[423:427],
	78:  _Opcode_name[427:431],
	80:  _Opcode_name[431:435],
	81:  _Opcode_name[435:438],
	82:  _Opcode_name[438:442],
	83:  _Opcode_name[442:450],
	84:  _Opcode_name[450:458],
	85:  _Opcode_name[458:466],
	86:  _Opcode_name[466:475],
	87:  _Opcode_name[475:483],
	88:  _Opcode_name[483:490],
	89:  _Opcode_name[490:497],
	90:  _Opcode_name[497:504],
	91:  _Opcode_name[504:511],
	92:  _Opcode_name[511:518],
	93:  _Opcode_name[518:525],
	94:  _Opcode_name[525:532],
	95:  _Opcode_name[532:538],
	96:  _Opcode_name[538:545],
	97:  _Opcode_name[545:552],
	98:  _Opcode_name[552:559],
	99:  _Opcode_name[559:566],
	100: _Opcode_name[566:573],
	101: _Opcode_name[573:580],
	102: _Opcode_name[580:587],
	103: _Opcode_name[587:593],
	104: _Opcode_name[593:599],
	105: _Opcode_name[599:605],
	106: _Opcode_name[605:611],
	107: _Opcode_name[611:617],
	108: _Opcode_name[617:623],
	109: _Opcode_name[623:629],
	110: _Opcode_name[629:635],
	111: _Opcode_name[635:640],
	112: _Opcode_name[640:646],
	113: _Opcode_name[646:652],
	114: _Opcode_name[652:658],
	115: _Opcode_name[658:664],
	116: _Opcode_name[664:670],
	117: _Opcode_name[670:676],
	118: _Opcode_name[676:682],
	119: _Opcode_name[682:687],
	120: _Opcode_name[687:693],
	121: _Opcode_name[693:699],
	122: _Opcode_name[699:705],
	123: _Opcode_name[705:711],
	124: _Opcode_name[711:717],
	125: _Opcode_name[717:723],
	126: _Opcode_name[723:729],
	127: _Opcode_name[729:734],
	128: _Opcode_name[734:740],
	129: _Opcode_name[740:746],
	130: _Opcode_name[746:752],
	131: _Opcode_name[752:758],
	132: _Opcode_name[758:764],
	133: _Opcode_name[764:770],
	134: _Opcode_name[770:776],
	135: _Opcode_name[776:781],
	136: _Opcode_name[781:790],
	137: _Opcode_name[790:796],
	139: _Opcode_name[796:799],
	140: _Opcode_name[799:805],
	141: _Opcode_name[805:809],
	142: _Opcode_name[809:814],
	144: _Opcode_name[814:820],
	145: _Opcode_name[820:823],
	146: _Opcode_name[823:825],
	147: _Opcode_name[825:828],
	151: _Opcode_name[828:833],
	152: _Opcode_name[833:841],
	153: _Opcode_name[841:845],
	154: _Opcode_name[845:848],
	155: _Opcode_name[848:854],
	156: _Opcode_name[854:857],
	157: _Opcode_name[857:860],
	158: _Opcode_name[860:863],
	159: _Opcode_name[863:866],
	160: _Opcode_name[866:869],
	161: _Opcode_name[869:872],
	162: _Opcode_name[872:875],
	163: _Opcode_name[875:878],
	164: _Opcode_name[878:882],
	165: _Opcode_name[882:888],
	166: _Opcode_name[888:894],
	168: _Opcode_name[894:897],
	169: _Opcode_name[897:900],
	170: _Opcode_name[900:903],
	171: _Opcode_name[903:910],
	172: _Opcode_name[910:916],
	177: _Opcode_name[916:918],
	179: _Opcode_name[918:926],
	180: _Opcode_name[926:937],
	181: _Opcode_name[937:939],
	182: _Opcode_name[939:941],
	183: _Opcode_name[941:943],
	184: _Opcode_name[943:945],
	185: _Opcode_name[945:948],
	186: _Opcode_name[948:951],
	187: _Opcode_name[951:957],
	190: _Opcode_name[957:964],
	191: _Opcode_name[964:974],
	192: _Opcode_name[974:978],
	193: _Opcode_name[978:984],
	194: _Opcode_name[984:993],
	195: _Opcode_name[993:1001],
	196: _Opcode_name[1001:1011],
	197: _Opcode_name[1011:1021],
	198: _Opcode_name[1021:1030],
	200: _Opcode_name[1030:1036],
	202: _Opcode_name[1036:1040],
	203: _Opcode_name[1040:1046],
	204: _Opcode_name[1046:1050],
	205: _Opcode_name[1050:1056],
	206: _Opcode_name[1056:1064],
	207: _Opcode_name[1064:1070],
	208: _Opcode_name[1070:1077],
	209: _Opcode_name[1077:1089],
	210: _Opcode_name[1089:1095],
	211: _Opcode_name[1095:1105],
	212: _Opcode_name[1105:1112],
	216: _Opcode_name[1112:1118],
	217: _Opcode_name[1118:1124],
	219: _Opcode_name[1124:1131],
	224: _Opcode_name[1131:1139],
	225: _Opcode_name[1139:1148],
}

func (i Opcode) String() string {
	if str, ok := _Opcode_map[i]; ok {
		return str
	}
	return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
}
